syntax = "proto3";

package regen.ecocredit.v1alpha1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/regen-network/regen-ledger/x/ecocredit";

// ClassInfo represents the high-level on-chain information for a credit class.
message ClassInfo {

  // class_id is the unique ID of credit class.
  string class_id = 1 [ (gogoproto.moretags) = "yaml:\"class_id\"" ];

  // designer is the designer of the credit class.
  string designer = 2;

  // issuers are the approved issuers of the credit class.
  repeated string issuers = 3;

  // metadata is any arbitrary metadata to attached to the credit class.
  bytes metadata = 4;
}

// BatchInfo represents the high-level on-chain information for a credit batch.
message BatchInfo {

  // class_id is the unique ID of credit class.
  string class_id = 1 [ (gogoproto.moretags) = "yaml:\"class_id\"" ];

  // batch_denom is the unique ID of credit batch.
  string batch_denom = 2 [ (gogoproto.moretags) = "yaml:\"batch_denom\"" ];

  // issuer is the issuer of the credit batch.
  string issuer = 3;

  // total_amount is the total number of active credits in the credit batch.
  // Some of the issued credits may be cancelled and will be removed from
  // total_amount and tracked in amount_cancelled. total_amount and
  // amount_cancelled will always sum to the original amount of credits that
  // were issued.
  string total_amount = 4 [ (gogoproto.moretags) = "yaml:\"total_amount\"" ];

  // metadata is any arbitrary metadata to attached to the credit batch.
  bytes metadata = 5;

  // amount_cancelled is the number of credits in the batch that have been
  // cancelled, effectively undoing there issuance. The sum of total_amount and
  // amount_cancelled will always sum to the original amount of credits that
  // were issued.
  string amount_cancelled = 6 [ (gogoproto.moretags) = "yaml:\"amount_cancelled\"" ];

  // start_date is the beginning of the period during which this credit batch
  // was quantified and verified.
  google.protobuf.Timestamp start_date = 7
      [(gogoproto.stdtime) = true, (gogoproto.moretags) = "yaml:\"start_date\""];

  // end_date is the end of the period during which this credit batch was
  // quantified and verified.
  google.protobuf.Timestamp end_date = 8
      [(gogoproto.stdtime) = true, (gogoproto.moretags) = "yaml:\"end_date\""];

  // project_location is the location of the project backing the credits in this
  // batch. Full documentation can be found in MsgCreateBatch.project_location.
  string project_location = 9 [(gogoproto.moretags) = "yaml:\"project_location\""];
}

// Params defines the updatable global parameters of the ecocredit module for
// use with the x/params module.
message Params {
  // credit_class_fee is the fixed fee charged on creation of a new credit class
  repeated cosmos.base.v1beta1.Coin credit_class_fee = 1
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

// GenesisState defines the state of the ecocredit module that is needed at genesis
message GenesisState {
  // Params contains the updateable global parameters for use with the x/params module
  Params params = 1 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"params\""];
}