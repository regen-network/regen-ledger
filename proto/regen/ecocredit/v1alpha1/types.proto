syntax = "proto3";

package regen.ecocredit.v1alpha1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/regen-network/regen-ledger/x/ecocredit";

// ClassInfo represents the high-level on-chain information for a credit class.
message ClassInfo {

  // class_id is the unique ID of credit class.
  string class_id = 1;

  // admin is the admin of the credit class.
  string admin = 2;

  // issuers are the approved issuers of the credit class.
  repeated string issuers = 3;

  // metadata is any arbitrary metadata to attached to the credit class.
  bytes metadata = 4;

  // credit_type describes the type of credit (e.g. carbon, biodiversity), as well as unit and precision.
  CreditType credit_type = 5;

  // The number of batches issued in this credit class.
  uint64 num_batches = 6;
}

// BatchInfo represents the high-level on-chain information for a credit batch.
message BatchInfo {

  // class_id is the unique ID of credit class.
  string class_id = 1;

  // batch_denom is the unique ID of credit batch.
  string batch_denom = 2;

  // issuer is the issuer of the credit batch.
  string issuer = 3;

  // total_amount is the total number of active credits in the credit batch.
  // Some of the issued credits may be cancelled and will be removed from
  // total_amount and tracked in amount_cancelled. total_amount and
  // amount_cancelled will always sum to the original amount of credits that
  // were issued.
  string total_amount = 4;

  // metadata is any arbitrary metadata attached to the credit batch.
  bytes metadata = 5;

  // amount_cancelled is the number of credits in the batch that have been
  // cancelled, effectively undoing there issuance. The sum of total_amount and
  // amount_cancelled will always sum to the original amount of credits that
  // were issued.
  string amount_cancelled = 6;

  // start_date is the beginning of the period during which this credit batch
  // was quantified and verified.
  google.protobuf.Timestamp start_date = 7 [ (gogoproto.stdtime) = true ];

  // end_date is the end of the period during which this credit batch was
  // quantified and verified.
  google.protobuf.Timestamp end_date = 8 [ (gogoproto.stdtime) = true ];

  // project_location is the location of the project backing the credits in this
  // batch. Full documentation can be found in MsgCreateBatch.project_location.
  string project_location = 9;
}

// Params defines the updatable global parameters of the ecocredit module for
// use with the x/params module.
message Params {
  // credit_class_fee is the fixed fee charged on creation of a new credit class
  repeated cosmos.base.v1beta1.Coin credit_class_fee = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];

  // allowed_class_creators is an allowlist defining the addresses with
  // the required permissions to create credit classes
  repeated string allowed_class_creators = 2;

  // allowlist_enabled is a param that enables/disables the allowlist for credit
  // creation
  bool allowlist_enabled = 3;

  // credit_types is a list of definitions for credit types
  repeated CreditType credit_types = 4;
}

// CreditType defines the measurement unit/precision of a certain credit type
// (e.g. carbon, biodiversity...)
message CreditType {
  // the type of credit (e.g. carbon, biodiversity, etc)
  string name = 1;

  // abbreviation is a 1-3 character uppercase abbreviation of the CreditType
  // name, used in batch denominations within the CreditType. It must be unique.
  string abbreviation = 2;

  // the measurement unit (e.g. kg, ton, etc)
  string unit = 3;

  // the decimal precision
  uint32 precision = 4;
}

// CreditTypeSeq associates a sequence number with a credit type abbreviation.
// This represents the number of credit classes created with that credit type.
message CreditTypeSeq {
  // The credit type abbreviation
  string abbreviation = 1;

  // The sequence number of classes of the credit type
  uint64 seq_number = 2;
}