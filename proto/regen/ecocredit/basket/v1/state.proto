syntax = "proto3";

// Revision 1
package regen.ecocredit.basket.v1;

import "cosmos/orm/v1alpha1/orm.proto";
import "google/protobuf/timestamp.proto";
import "regen/ecocredit/basket/v1/types.proto";

option go_package = "github.com/regen-network/regen-ledger/x/ecocredit/basket";

// Basket represents a basket in state.
message Basket {
  option (cosmos.orm.v1alpha1.table) = {
    id : 1,
    primary_key : {fields : "id", auto_increment : true}
    index : {id : 1, fields : "basket_denom", unique : true}
    index : {id : 2, fields : "name", unique : true}
  };

  // id is the uint64 ID of the basket. It is used internally for reducing
  // storage space.
  uint64 id = 1;

  // basket_denom is the basket bank denom formed from name and credit type with
  // the format `eco.<prefix><credit_type_abbrev>.<name>` where prefix is the
  // prefix of the bank denom exponent, a standard SI unit derived from credit
  // type precision, and mapped as follows:
  //   0 - no prefix
  //   1 - d (deci)
  //   2 - c (centi)
  //   3 - m (milli)
  //   6 - u (micro)
  //   9 - n (nano)
  //   12 - p (pico)
  //   15 - f (femto)
  //   18 - a (atto)
  //   21 - z (zepto)
  //   24 - y (yocto)
  string basket_denom = 2;

  // name is the unique name of the basket specified in MsgCreate. Basket
  // names must be unique across all credit types and choices of exponent
  // above and beyond the uniqueness constraint on basket_denom.
  string name = 3;

  // disable_auto_retire indicates whether or not the credits will be retired
  // upon withdraw from the basket.
  bool disable_auto_retire = 4;

  // credit_type_abbrev is the abbreviation of the credit type this basket is
  // able to hold.
  string credit_type_abbrev = 5;

  // date_criteria is the date criteria for batches admitted to the basket.
  DateCriteria date_criteria = 6;

  // Deprecated (Since Revision 1): This field is no longer used and will be
  // removed in the next version. The value of credit type precision is always
  // used as the exponent when converting credits to/from basket tokens. This
  // field will be set to the value of credit type precision until removed.
  uint32 exponent = 7 [ deprecated = true ];

  // curator is the address of the basket curator who is able to change certain
  // basket settings.
  //
  // Since Revision 1
  bytes curator = 8;
}

// BasketClass describes a credit class that can be deposited in a basket.
message BasketClass {
  option (cosmos.orm.v1alpha1.table) = {
    id : 2,
    primary_key : {fields : "basket_id,class_id"}
  };

  // basket_id is the ID of the basket
  uint64 basket_id = 1;
  // class_id is the id of the credit class that is allowed to be deposited in
  // the basket
  string class_id = 2;
}

// BasketBalance stores the amount of credits from a batch in a basket
message BasketBalance {
  option (cosmos.orm.v1alpha1.table) = {
    id : 3,
    primary_key : {fields : "basket_id,batch_denom"}
    index : {id : 1, fields : "basket_id,batch_start_date"}
  };

  // basket_id is the ID of the basket
  uint64 basket_id = 1;

  // batch_denom is the denom of the credit batch
  string batch_denom = 2;

  // balance is the amount of ecocredits held in the basket
  string balance = 3;

  // batch_start_date is the start date of the batch. This field is used
  // to create an index which is used to remove the oldest credits first.
  google.protobuf.Timestamp batch_start_date = 4;
}
