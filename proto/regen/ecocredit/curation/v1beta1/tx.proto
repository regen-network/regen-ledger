syntax = "proto3";

package regen.ecocredit.curation.v1beta1;

import "regen/ecocredit/curation/v1beta1/types.proto";

// Msg is the eco-credit curation Msg service definition.
service Msg {
  // DefineTag defines a new tag.
  rpc DefineTag(MsgDefineTag) returns (MsgDefineTagResponse) {}

  // Tag tags a target with a tag.
  rpc Tag(MsgTag) returns (MsgTagResponse) {}

  // Untag removes a tag from a target.
  rpc Untag(MsgUntag) returns (MsgTagResponse) {}

  // UpdateCurator updates the curator of a tag.
  rpc UpdateCurator(MsgUpdateCurator) returns (MsgUpdateCuratorResponse) {}

  // UpdateMetadata updates the metadata of a tag.
  rpc UpdateMetadata(MsgUpdateMetadata) returns (MsgUpdateMetadataResponse) {}
}

// MsgDefineTag is the Msg/DefineTag request type.
message MsgDefineTag {
  // curator is the address of the curator that will be able to tag and untag
  // this tag.
  string curator = 1;

  // meta is the metadata associated with the tag.
  TagMeta meta = 2;

  // type defines the type of the tag.
  TagType type = 3;
}

// MsgDefineTagResponse is the Msg/DefineTag response type.
message MsgDefineTagResponse {
  // tag_id is the unique identifier of the tag.
  string tag_id = 1;
}

// MsgTag is the Msg/Tag request type.
message MsgTag {
  // curator is the address of the tag curator.
  string curator = 1;

  // tag_id is the unique identifier of the tag.
  string tag_id = 2;

  // target is the target of the tag.
  TagTarget target = 3;

  // value is the decimal string representation of the numeric value to set
  // when the tag is a numeric tag. It should not be set when the tag is a
  // not a numeric tag.
  // value must be within the range of the attribute's min and max values
  // and must not exceed the attribute's precision.
  string value = 4;
}

// MsgTagResponse is the Msg/Tag response type.
message MsgTagResponse {}

// MsgUntag is the Msg/Untag request type.
message MsgUntag {
  // curator is the address of the tag curator.
  string curator = 1;

  // tag_id is the unique identifier of the tag.
  string tag_id = 2;

  // target is the target of the tag.
  TagTarget target = 3;
}

// MsgUntagResponse is the Msg/Untag response type.
message MsgUntagResponse {}

// MsgUpdateCurator is the Msg/UpdateCurator request type.
message MsgUpdateCurator {
  // curator is the address of the tag curator.
  string curator = 1;

  // tag_id is the unique identifier of the tag.
  string tag_id = 2;

  // new_curator is the new curator address.
  string new_curator = 3;
}

// MsgUpdateCuratorResponse is the Msg/UpdateCurator response type.
message MsgUpdateCuratorResponse {}

// MsgUpdateMetadata is the Msg/UpdateMetadata request type.
message MsgUpdateMetadata {
  // curator is the address of the tag curator.
  string curator = 1;

  // tag_id is the unique identifier of the tag.
  string tag_id = 2;

  // meta is the new metadata.
  TagMeta meta = 3;
}

// MsgUpdateMetadataResponse is the Msg/UpdateMetadata response type.
message MsgUpdateMetadataResponse {}