syntax = "proto3";

package regen.ecocredit.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "regen/ecocredit/v1/state.proto";

option go_package = "github.com/regen-network/regen-ledger/x/ecocredit/core";

// Params defines the updatable global parameters of the ecocredit module for
// use with the x/params module.
message Params {
  // credit_class_fee is the fixed fee charged on creation of a new credit class
  repeated cosmos.base.v1beta1.Coin credit_class_fee = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];

  // basket_fee is the fixed fee charged on creation of a new basket
  repeated cosmos.base.v1beta1.Coin basket_fee = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];

  // allowed_class_creators is an allowlist defining the addresses with
  // the required permissions to create credit classes
  repeated string allowed_class_creators = 3;

  // allowlist_enabled is a param that enables/disables the allowlist for credit
  // creation
  bool allowlist_enabled = 4;

  // credit_types is a list of definitions for credit types
  repeated CreditType credit_types = 5;

  // allowed_ask_denoms is a list of denoms (and display information) allowed to
  // be used in sell order ask prices.
  repeated AskDenom allowed_ask_denoms = 6;
}

// AskDenom defines the structure for a coin denom.
message AskDenom {

  // denom is the denom to allow (ex. ibc/GLKHDSG423SGS)
  string denom = 1;

  // display_denom is the denom to display to the user and is informational
  string display_denom = 2;

  // exponent is the exponent that relates the denom to the display_denom and is
  // informational
  uint32 exponent = 3;
}

// OriginTx is a reference to an external transaction or an operation
// related to an action on Regen Ledger.
message OriginTx {
  // type of the transaction originating the mint process. Eg: Polygon,
  // Ethereum, Verra...
  string typ = 1;
  // the id of a transaction based on a type (tx id, serial number)
  string id = 2;
}
