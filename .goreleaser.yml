project_name: regen-ledger

before:
  hooks:
    - ./scripts/completions.sh

env:
  - GO111MODULE=on
  - CGO_ENABLED=1

builds:
  - id: regen-darwin-amd64
    binary: regen
    main: ./cmd/regen
    goarch:
      - amd64
    goos:
      - darwin
    env:
      - CC=o64-clang
      - CXX=o64-clang++
    flags:
      - "-mod={{ .Env.MOD }}"
      - "-tags={{ .Env.BUILD_TAGS }}"
      - -trimpath
    ldflags:
      - "{{ .Env.BUILD_VARS }}"
      - "{{ .Env.STRIP_FLAGS }}"
      - "-linkmode={{ .Env.LINKMODE }}"

  - id: regen-darwin-arm64
    binary: regen
    main: ./cmd/regen
    goarch:
      - arm64
    goos:
      - darwin
    env:
      - CC=oa64-clang
      - CXX=oa64-clang++
    flags:
      - "-mod={{ .Env.MOD }}"
      - "-tags={{ .Env.BUILD_TAGS }}"
      - -trimpath
    ldflags:
      - "{{ .Env.BUILD_VARS }}"
      - "{{ .Env.STRIP_FLAGS }}"
      - "-linkmode={{ .Env.LINKMODE }}"

  - id: regen-linux-amd64
    binary: regen
    main: ./cmd/regen
    env:
      - CC=x86_64-linux-gnu-gcc
      - CXX=x86_64-linux-gnu-g++
    goarch:
      - amd64
    goos:
      - linux
    flags:
      - "-mod={{ .Env.MOD }}"
      - "-tags={{ .Env.BUILD_TAGS }}"
      - -trimpath
    ldflags:
      - "{{ .Env.BUILD_VARS }}"
      - "{{ .Env.STRIP_FLAGS }}"
      - "-linkmode={{ .Env.LINKMODE }}"
      - -extldflags "-lc -lrt -lpthread --static"

  - id: regen-linux-arm64
    binary: regen
    main: ./cmd/regen
    goarch:
      - arm64
    goos:
      - linux
    env:
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
    flags:
      - "-mod={{ .Env.MOD }}"
      - "-tags={{ .Env.BUILD_TAGS }}"
      - -trimpath
    ldflags:
      - "{{ .Env.BUILD_VARS }}"
      - "{{ .Env.STRIP_FLAGS }}"
      - "-linkmode={{ .Env.LINKMODE }}"
      - -extldflags "-lc -lrt -lpthread --static"

  - id: regen-windows-amd64
    binary: regen
    main: ./cmd/regen
    goarch:
      - amd64
    goos:
      - windows
    env:
      - CC=x86_64-w64-mingw32-gcc
      - CXX=x86_64-w64-mingw32-g++
    flags:
      - "-mod={{ .Env.MOD }}"
      - "-tags={{ .Env.BUILD_TAGS }}"
      - -trimpath
      - -buildmode=exe
    ldflags:
      - "{{ .Env.BUILD_VARS }}"
      - "{{ .Env.STRIP_FLAGS }}"
      - "-linkmode={{ .Env.LINKMODE }}"

archives:
  - id: regen
    builds:
      - regen-darwin-universal
      - regen-linux-amd64
      - regen-linux-arm64
      - regen-windows-amd64
    name_template: "{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}"
    wrap_in_directory: true
    format: zip
    files:
      - completions*
      - README.md
      - LICENSE

brews:
  - name: regen-ledger
    ids:
      - regen
    tap:
      owner: regen-network
      name: regen-ledger
      branch: homebrew-taps
    folder: ${{ .Tag }}
    homepage: "https://www.regen.network/"
    description: "Blockchain-powered marketplace for climate solutions and planetary regenerations"
    test: |
      system "#{bin}/regen --version"
    install: |
      bin.install "regen"
      bash_completion.install "completions/regen.bash" => "regen"
      zsh_completion.install "completions/regen.zsh" => "_regen"
      fish_completion.install "completions/regen.fish"

nfpms:
  - maintainer: regen-network
    description: "Blockchain-powered marketplace for climate solutions and planetary regenerations"
    homepage: "https://www.regen.network/"
    license: Apache 2.0
    formats:
      - deb
      - rpm
      - apk
    contents:
      - src: ./completions/regen.bash
        dst: /usr/share/bash-completion/completions/regen
        file_info:
          mode: 0644
      - src: ./completions/regen.fish
        dst: /usr/share/fish/vendor_completions.d/regen.fish
        file_info:
          mode: 0644
      - src: ./completions/regen.zsh
        dst:  /usr/share/zsh/vendor-completions/_regen
        file_info:
          mode: 0644

release:
  github:
    owner: regen-network
    name: regen-ledger
  prerelease: auto
  draft: false
