// Code generated by protoc-gen-go-cosmos-orm. DO NOT EDIT.

package ecocreditv1alpha2

type TxStore interface {
}

type txStore struct {
	msgCreateClass                 *msgCreateClassStore
	msgCreateClassResponse         *msgCreateClassResponseStore
	msgCreateProject               *msgCreateProjectStore
	msgCreateProjectResponse       *msgCreateProjectResponseStore
	msgCreateBatch                 *msgCreateBatchStore
	msgCreateBatchResponse         *msgCreateBatchResponseStore
	msgSend                        *msgSendStore
	msgSendResponse                *msgSendResponseStore
	msgRetire                      *msgRetireStore
	msgRetireResponse              *msgRetireResponseStore
	msgCancel                      *msgCancelStore
	msgCancelResponse              *msgCancelResponseStore
	msgUpdateClassAdmin            *msgUpdateClassAdminStore
	msgUpdateClassAdminResponse    *msgUpdateClassAdminResponseStore
	msgUpdateClassIssuers          *msgUpdateClassIssuersStore
	msgUpdateClassIssuersResponse  *msgUpdateClassIssuersResponseStore
	msgUpdateClassMetadata         *msgUpdateClassMetadataStore
	msgUpdateClassMetadataResponse *msgUpdateClassMetadataResponseStore
	msgSell                        *msgSellStore
	msgSellResponse                *msgSellResponseStore
	msgUpdateSellOrders            *msgUpdateSellOrdersStore
	msgUpdateSellOrdersResponse    *msgUpdateSellOrdersResponseStore
	msgBuy                         *msgBuyStore
	msgBuyResponse                 *msgBuyResponseStore
	msgAllowAskDenom               *msgAllowAskDenomStore
	msgAllowAskDenomResponse       *msgAllowAskDenomResponseStore
	msgCreateBasket                *msgCreateBasketStore
	msgCreateBasketResponse        *msgCreateBasketResponseStore
	msgAddToBasket                 *msgAddToBasketStore
	msgAddToBasketResponse         *msgAddToBasketResponseStore
	msgTakeFromBasket              *msgTakeFromBasketStore
	msgTakeFromBasketResponse      *msgTakeFromBasketResponseStore
	msgPickFromBasket              *msgPickFromBasketStore
	msgPickFromBasketResponse      *msgPickFromBasketResponseStore
}

func (x txStore) MsgCreateClass() MsgCreateClassStore {
	return x.msgCreateClass
}
func (x txStore) MsgCreateClassResponse() MsgCreateClassResponseStore {
	return x.msgCreateClassResponse
}
func (x txStore) MsgCreateProject() MsgCreateProjectStore {
	return x.msgCreateProject
}
func (x txStore) MsgCreateProjectResponse() MsgCreateProjectResponseStore {
	return x.msgCreateProjectResponse
}
func (x txStore) MsgCreateBatch() MsgCreateBatchStore {
	return x.msgCreateBatch
}
func (x txStore) MsgCreateBatchResponse() MsgCreateBatchResponseStore {
	return x.msgCreateBatchResponse
}
func (x txStore) MsgSend() MsgSendStore {
	return x.msgSend
}
func (x txStore) MsgSendResponse() MsgSendResponseStore {
	return x.msgSendResponse
}
func (x txStore) MsgRetire() MsgRetireStore {
	return x.msgRetire
}
func (x txStore) MsgRetireResponse() MsgRetireResponseStore {
	return x.msgRetireResponse
}
func (x txStore) MsgCancel() MsgCancelStore {
	return x.msgCancel
}
func (x txStore) MsgCancelResponse() MsgCancelResponseStore {
	return x.msgCancelResponse
}
func (x txStore) MsgUpdateClassAdmin() MsgUpdateClassAdminStore {
	return x.msgUpdateClassAdmin
}
func (x txStore) MsgUpdateClassAdminResponse() MsgUpdateClassAdminResponseStore {
	return x.msgUpdateClassAdminResponse
}
func (x txStore) MsgUpdateClassIssuers() MsgUpdateClassIssuersStore {
	return x.msgUpdateClassIssuers
}
func (x txStore) MsgUpdateClassIssuersResponse() MsgUpdateClassIssuersResponseStore {
	return x.msgUpdateClassIssuersResponse
}
func (x txStore) MsgUpdateClassMetadata() MsgUpdateClassMetadataStore {
	return x.msgUpdateClassMetadata
}
func (x txStore) MsgUpdateClassMetadataResponse() MsgUpdateClassMetadataResponseStore {
	return x.msgUpdateClassMetadataResponse
}
func (x txStore) MsgSell() MsgSellStore {
	return x.msgSell
}
func (x txStore) MsgSellResponse() MsgSellResponseStore {
	return x.msgSellResponse
}
func (x txStore) MsgUpdateSellOrders() MsgUpdateSellOrdersStore {
	return x.msgUpdateSellOrders
}
func (x txStore) MsgUpdateSellOrdersResponse() MsgUpdateSellOrdersResponseStore {
	return x.msgUpdateSellOrdersResponse
}
func (x txStore) MsgBuy() MsgBuyStore {
	return x.msgBuy
}
func (x txStore) MsgBuyResponse() MsgBuyResponseStore {
	return x.msgBuyResponse
}
func (x txStore) MsgAllowAskDenom() MsgAllowAskDenomStore {
	return x.msgAllowAskDenom
}
func (x txStore) MsgAllowAskDenomResponse() MsgAllowAskDenomResponseStore {
	return x.msgAllowAskDenomResponse
}
func (x txStore) MsgCreateBasket() MsgCreateBasketStore {
	return x.msgCreateBasket
}
func (x txStore) MsgCreateBasketResponse() MsgCreateBasketResponseStore {
	return x.msgCreateBasketResponse
}
func (x txStore) MsgAddToBasket() MsgAddToBasketStore {
	return x.msgAddToBasket
}
func (x txStore) MsgAddToBasketResponse() MsgAddToBasketResponseStore {
	return x.msgAddToBasketResponse
}
func (x txStore) MsgTakeFromBasket() MsgTakeFromBasketStore {
	return x.msgTakeFromBasket
}
func (x txStore) MsgTakeFromBasketResponse() MsgTakeFromBasketResponseStore {
	return x.msgTakeFromBasketResponse
}
func (x txStore) MsgPickFromBasket() MsgPickFromBasketStore {
	return x.msgPickFromBasket
}
func (x txStore) MsgPickFromBasketResponse() MsgPickFromBasketResponseStore {
	return x.msgPickFromBasketResponse
}

var _ TxStore = txStore{}
